/**
 *AgavePlatformScienceAPILib
 *
 * This file was automatically generated by APIMATIC BETA v2.0 on 10/07/2015
 */

function BatchQueue(){
        this.customDirectives = undefined     
        this.isDefault = undefined     
        this.maxJobs = undefined     
        this.maxUserJobs = undefined     
        this.maxNodes = undefined     
        this.maxMemoryPerNode = undefined     
        this.maxProcessorsPerNode = undefined     
        this.maxRequestedTime = undefined     
        this.name = undefined     

}

//Make instanceof work

 



/**
 *Any custom directives that should be appended to scheduler directives. ex. #$ -A TG-12345
 *
 * @return: string
 */
BatchQueue.prototype.getCustomDirectives=function(){

        return this.customDirectives;
}
    
    

BatchQueue.prototype.setCustomDirectives=function(value){
        this.customDirectives = value;
}
     
 



/**
 *Is this the default queue for the system.
 *
 * @return: bool
 */
BatchQueue.prototype.getIsDefault=function(){

        return this.isDefault;
}
    
    

BatchQueue.prototype.setIsDefault=function(value){
        this.isDefault = value;
}
     
 



/**
 *The maximum number of jobs that can be in queue at once.
 *
 * @return: int
 */
BatchQueue.prototype.getMaxJobs=function(){

        return this.maxJobs;
}
    
    

BatchQueue.prototype.setMaxJobs=function(value){
        this.maxJobs = value;
}
     
 



/**
 *The maximum number of jobs per user that can be in queue at once.
 *
 * @return: int
 */
BatchQueue.prototype.getMaxUserJobs=function(){

        return this.maxUserJobs;
}
    
    

BatchQueue.prototype.setMaxUserJobs=function(value){
        this.maxUserJobs = value;
}
     
 



/**
 *The max nodes available per node to jobs submitted to this queue.
 *
 * @return: string
 */
BatchQueue.prototype.getMaxNodes=function(){

        return this.maxNodes;
}
    
    

BatchQueue.prototype.setMaxNodes=function(value){
        this.maxNodes = value;
}
     
 



/**
 *The max memory available per node to jobs submitted to this queue.
 *
 * @return: string
 */
BatchQueue.prototype.getMaxMemoryPerNode=function(){

        return this.maxMemoryPerNode;
}
    
    

BatchQueue.prototype.setMaxMemoryPerNode=function(value){
        this.maxMemoryPerNode = value;
}
     
 



/**
 *The max processors per node available to jobs submitted to this queue.
 *
 * @return: int
 */
BatchQueue.prototype.getMaxProcessorsPerNode=function(){

        return this.maxProcessorsPerNode;
}
    
    

BatchQueue.prototype.setMaxProcessorsPerNode=function(value){
        this.maxProcessorsPerNode = value;
}
     
 



/**
 *The max length of jobs submitted to this queue in hhh:mm:ss format.
 *
 * @return: string
 */
BatchQueue.prototype.getMaxRequestedTime=function(){

        return this.maxRequestedTime;
}
    
    

BatchQueue.prototype.setMaxRequestedTime=function(value){
        this.maxRequestedTime = value;
}
     
 



/**
 *The name of the batch queue.
 *
 * @return: string
 */
BatchQueue.prototype.getName=function(){

        return this.name;
}
    
    

BatchQueue.prototype.setName=function(value){
        this.name = value;
}
     





