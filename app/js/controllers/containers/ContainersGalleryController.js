  angular.module('AgaveToGo').controller('ContainersGalleryController', function($rootScope, $filter, $compile, $scope, $q, $uibModal, $http, $timeout, $translate, Commons, AppsController, SystemsController, ActionsService, PermissionsService, MessageService, Quay, SystemExecutionTypeEnum) {    $scope.apps = [];    $scope.currentApp = {};    $scope.currentAppDetails = '<agave-app-details></agave-app-details>';    $scope.offset = 0;    $scope.limit = 25;    $scope.requesting = true;    var initCatalog = function() {      // init cubeportfolio      $('#js-grid-lightbox-gallery').cubeportfolio({        filters: '#js-filters-lightbox-gallery1, #js-filters-lightbox-gallery2',        loadMore: '#js-loadMore-lightbox-gallery',        loadMoreAction: 'click',        layoutMode: 'grid',        loadMoreFuture: AppsController.listApps,        mediaQueries: [{          width: 1500,          cols: 5        }, {          width: 1100,          cols: 4        }, {          width: 800,          cols: 3        }, {          width: 480,          cols: 2        }, {          width: 320,          cols: 1        }],        defaultFilter: '*',        animationType: 'rotateSides',        gapHorizontal: 10,        gapVertical: 10,        gridAdjustment: 'responsive',        caption: 'zoom',        displayType: 'sequentially',        displayTypeSpeed: 100,        // lightbox        lightboxDelegate: '.cbp-lightbox',        lightboxGallery: true,        lightboxTitleSrc: 'data-title',        lightboxCounter: '<div class="cbp-popup-lightbox-counter">{{current}} of {{total}}</div>',        // singlePageInline        singlePageInlineDelegate: '.cbp-singlePageInline',        singlePageInlinePosition: 'below',        singlePageInlineInFocus: true,        singlePageInlineCallback: function (imageId, element) {          var t = this;          Quay.getImageDetails(imageId).then(              function (response) {                $scope.currentImage = response;                t.updateSinglePageInline($compile($scope.currentAppDetails)($scope));              },              function (errorResponse) {                MessageService.handle(response, $translate.instant('error_apps_details'));              });          //          // AppsController.getAppDetails(appId).then(          //     function (data) {          //       $scope.currentApp = data;          //          //       t.updateSinglePageInline($compile($scope.currentAppDetails)($scope));          //          //     },          //     function (data) {          //       console.log(data);          //       App.alert({          //         type: 'danger',          //         message: "There was an error contacting the apps service. If this " +          //         "persists, please contact your system administrator."          //       });          //       t.updateSinglePageInline($compile($scope.currentAppDetails)($scope));          //     });        },      });    };    AppsController.getAppDetails('jfonner-run-singularity-4.2.3')        .then(            function(response) {              $scope.app = response.result;            }        );    Quay.list()        .then(            function (response) {              $scope[$scope._COLLECTION_NAME] = [];              _.each(response.repositories, function (image) {                image.available = true;                image.version = '--';                image.runtimes = {                  docker: {executionType: SystemExecutionTypeEnum.CLI},                  singularity: {executionType: SystemExecutionTypeEnum.CLI},                  native: {executionType: SystemExecutionTypeEnum.CLI}                };                // image.executionSystem = $scope.app.executionSystem;                $scope[$scope._COLLECTION_NAME].push(image);              });              $scope.requesting = false;              $timeout(function () {                initCatalog();              }, 50);            }, function (response) {              MessageService.handle(response, $translate.instant('error_apps_search'));              $scope.requesting = false;            }        );    // AppsController.listApps($scope.limit, $scope.offset).then(    //     function (data) {    //       $scope.apps = data;    //       $timeout(function () {    //         initCatalog();    //       }, 50);    //     },    //     function (data) {    //       //self.deferredHandler(data, deferred, $translate.instant('error_creating_folder'));    //       console.log(data);    //       App.alert({    //         type: 'danger',    //         message: "There was an error contacting the apps service. If this " +    //         "persists, please contact your system administrator.",    //       });    //       initCatalog();    //       $('.cbp-l-loadMore-link').hide();    //     });  }).directive('agaveAppDetails', function($filter) {  return {    restrict: 'EA',    scope: true,    replace: true,    templateUrl: '../containers/views/apps/ajax_details.html',    link: function ($scope, element, attributes) {      setTimeout(function () {}, 10);    }  };}).directive('agaveAppListing', function($filter) {  return {    restrict: 'EA',    scope: true,    replace: true,    templateUrl: '../containers/views/apps/ajax_listing.html',    link: function ($scope, element, attributes) {      setTimeout(function () {}, 10);    }  };}).filter('appImage', ['Commons', function (Commons) {  return function (icon) {    return icon ? icon : 'https://avatars2.githubusercontent.com/u/1158637?v=3&s=600';  };}]).filter("sanitize", ['$sce', function($sce) {  return function(htmlCode){    return $sce.trustAsHtml(htmlCode);  }}]).filter("runtimes", function() {  return function (container) {    return container.keys().join(' ');  };}).filter("executionTypes", function() {  return function (container) {    return angular.forEach(container.runtimes, function(val, runtime) {      return val.executionType;    }).join(' ');  };});