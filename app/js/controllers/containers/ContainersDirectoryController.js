angular.module('AgaveToGo').controller('ContainersDirectoryController', function ($injector, $timeout, $rootScope, $scope, $state, $stateParams, $window, $q, $uibModal, $http, $translate, Commons, AppsController, SystemsController, ActionsService, PermissionsService, MessageService, Quay, SystemExecutionTypeEnum) {  $scope.offset = $scope.offset || 0;  $scope.limit = $scope.limit || 25;  $scope.containers = [];  $scope._COLLECTION_NAME = $scope._COLLECTION_NAME || 'containers';  $scope._RESOURCE_NAME = $scope._RESOURCE_NAME || 'container';  $scope.available = true;  $scope.publicOnly = null;  $scope.privateOnly = null;  $scope.sortType = "-name";  $scope.sortReverse = true;  $scope.containersList = [];  $scope.containersDetailsList = [];  $scope.filter = '';  $scope.formatName = function (err, image, row) {    return '<a href="' + $window.location.href + '/' + image.name + '"> ' + image.name + '</a>';  }  $scope.formatRuntimes = function (err, image, row) {    var formattedColumn = '';    if (image.runtimes.docker) {      formattedColumn += '<a href="https://quay.io/repository/' + image.namespace + '/' + image.name + '"> ' +          '<img src="../assets/layouts/layout/img/docker.png" class="runtime-icon img img-thumbnail">' +          '</a>';    }    if (image.runtimes.singularity) {      formattedColumn += '<a href="https://public.agaveapi.co/files/v2/download/dooley/system/singularity-storage/' + image.name + '_latest.img.bz2">' +          '<img src="../assets/layouts/layout/img/singularity.png" class="runtime-icon img img-thumbnail">' +          '</a>';    }    return formattedColumn;  };  $scope.formatPopularity = function (err, image, row) {    return '<div class="knob-wrapper" style="height:50px; text-align:center;">' +        '<input class="knob" data-width="50" data-thickness="0.5" data-tickcolorizevalues="true" data-displayinput="true" value="' + (image.popularity || 0) + '" data-foregroundcolor="#3fc9d5" data-readonly="true"></div>';  }  $scope.formatActions = function (err, image, row) {    return '<div class="btn-group"> <a href="' + $window.location.href + '/' + image.name + '/run" class="btn red btn-outline" role="button"> <i class="fa fa-play"></i>Run </a> </div>';  }  $scope.refresh = function () {    $scope.containersDetailsList = [];    $scope.requesting = true;    AppsController.getAppDetails('jfonner-run-singularity-4.2.3')        .then(            function (response) {              $scope.app = response.result;            }        );    Quay.list(-1)        .then(            function (response) {              $scope[$scope._COLLECTION_NAME] = [];              _.each(response, function (image) {                image.available = true;                image.version = '--';                image.runtimes = {                  docker: {executionType: SystemExecutionTypeEnum.CLI},                  singularity: {executionType: SystemExecutionTypeEnum.CLI},                  native: {executionType: SystemExecutionTypeEnum.CLI}                  // rocket: {executionType: SystemExecutionTypeEnum.CLI}                };                image.public = image.public ? 'Yes' : 'No';                // image.executionSystem = $scope.app.executionSystem;                $scope[$scope._COLLECTION_NAME].push(image);              });              var $table = $('#datatable_collection');              $timeout(function () {                $table.bootstrapTable({                  toolbar: "#toolbar",                  data: $scope.containers,                  height: 299,                  pagination: true,                  search: true,                  sortName: "name",                  sortStable: true,                  // searchOnEnterKey: true,                  // idField: "name",                  classes: "table table-striped table-bordered table-hover",                  // showHeader: false,                  showFooter: false,                  showRefresh: true,                  showColumns: true,                  minimumCountColumns: 3,                  pageList: ['10','25', '50', '100', 'ALL'],                  onPostBody: function (postBodyData) {                    $(".knob").knob({                      width: 50,                      thickness: 0.5,                      tickcolorizevalues: true,                      displayinput: true,                      foregroundcolor: "#3fc9d5"                    });                  },                  columns: [                    {                      field: 'name',                      sortable: true,                      title: 'Name',                      align: 'left',                      width: '15%',                      formatter: $scope.formatName                    },                    {                      field: 'description',                      sortable: true,                      title: 'Description',                      align: 'left',                      width: '30%'                    },                    {                      field: 'runtimes',                      sortable: false,                      title: 'Runtimes',                      align: 'center',                      width: '15%',                      searchable: false,                      formatter: $scope.formatRuntimes                    },                    {                      field: 'public',                      sortable: true,                      title: 'Public',                      align: 'center',                      width: '10%'                    },                    {                      field: 'popularity',                      sortable: true,                      title: 'Popularity',                      align: 'center',                      width: '10%',                      searchable: false,                      formatter: $scope.formatPopularity                    },                    {                      field: '',                      sortable: false,                      title: 'Actions',                      align: 'center',                      width: '10%',                      formatter: $scope.formatActions                    }                  ]                });                $(window).resize(function () {                  $table.bootstrapTable('resetView', {                    height: getHeight()                  });                });                setTimeout(function () {                  $table.bootstrapTable('resetView');                }, 200);              }, 100);              $scope.requesting = false;            }, function (response) {              MessageService.handle(response, $translate.instant('error_container_search'));              $scope.requesting = false;            }        );  };  $scope.refresh();  $scope.confirmAction = function (resourceType, resource, resourceAction, resourceList, resourceIndex) {    ActionsService.confirmAction(resourceType, resource, resourceAction, resourceList, resourceIndex);  };  $scope.getNotifications = function (resourceType, resource) {    ActionsService.getNotifications(resourceType, resource);  };});