angular.module('AgaveToGo').controller('ClientsDirectoryController', function ($injector, $timeout, $rootScope, $scope, $state, $stateParams, $q, $uibModal, $http, $translate, Commons, ClientsController, ActionsService, PermissionsService, MessageService, $localStorage) {  $scope.offset = $scope.offset || 0;  $scope.limit = $scope.limit || 25;  $scope.systems = [];  $scope._COLLECTION_NAME = $scope._COLLECTION_NAME || 'clients';  $scope._RESOURCE_NAME = $scope._RESOURCE_NAME || 'clients';  $scope.sortType = 'lastModified';  $scope.sortReverse = true;  $scope.clients = [];  $scope.filter = '';  $scope.query = '';  $scope.username = '';  $scope.passwd = '';  $scope.refresh = function () {    $scope.clients = [];    $scope.requesting = true;    var tmpCredentials = SessionCredentialService.getUserCredentials();    ClientsController.listClients(tmpCredentials.username, tmpCredentials.passwd).then(        function (response) {          $scope[$scope._COLLECTION_NAME] = response.result;          $scope.requesting = false;        },        function (response) {          MessageService.handle(response, $translate.instant('error_clients_list'));          $scope.requesting = false;        }    );  };  $scope.refresh();  // $scope.maybePromptForAuthCredentials = function (resourceType, resource, resourceAction, resourceList, resourceIndex) {  //  //   // if ($localStorage.client && $localStorage.client.username && $localStorage.client.password) {  //   //  //   //   // use the public key of the webapp client as the weak key for user credentials  //   //   var key = settings.oauth.clients[$localStorage.tenant.code].clientKey;  //   //  //   //   $scope.username = $localStorage.client.username;  //   //  //   //   $scope.passwd = EncryptionService.decrypt(key, $localStorage.client.password);  //   //  //   // }  //   // else {  //   return ;  //   // if (creds) {  //   //   $scope.username = creds.username;  //   //   $scope.passwd = creds.password;  //   // }  //   // }  //  //   return true;  // };  $scope.confirmAction = function (resourceType, resource, resourceAction, resourceList, resourceIndex) {    ActionsService.confirmAction(resourceType, resource, resourceAction, resourceList, resourceIndex);  };  $scope.getNotifications = function (resourceType, resource) {    ActionsService.getNotifications(resourceType, resource);  };});