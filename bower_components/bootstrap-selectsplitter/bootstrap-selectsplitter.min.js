+function(a){"use strict";function c(c){return this.each(function(){var d=a(this),e=d.data("selectsplitter"),f="object"==typeof c&&c;(e||"destroy"!=c)&&(e||d.data("selectsplitter",e=new b(this,f)),"string"==typeof c&&e[c]())})}var b=function(a,b){this.init("selectsplitter",a,b)};b.DEFAULTS={template:'<div class="row" data-selectsplitter-wrapper-selector><div class="col-xs-12 col-sm-6"><select class="form-control" data-selectsplitter-firstselect-selector></select></div> <!-- Add the extra clearfix for only the required viewport --><div class="clearfix visible-xs-block"></div><div class="col-xs-12 col-sm-6"><select class="form-control" data-selectsplitter-secondselect-selector></select></div></div>'},b.prototype.init=function(c,d,e){var f=this;f.type=c,f.$element=a(d),f.$element.hide(),f.options=a.extend({},b.DEFAULTS,e),f.fullCategoryList={};var g=0,h=0;f.$element.find("optgroup").each(function(){f.fullCategoryList[a(this).attr("label")]={};var b=a(this),c=0,d={};a(this).find("option").each(function(){var b=a(this).attr("value"),e=a(this).text();d[a(this).index()]={x:b,y:e},c++}),c>h&&(h=c),f.fullCategoryList[b.attr("label")]=d,g++});var i="";for(var j in f.fullCategoryList)f.fullCategoryList.hasOwnProperty(j)&&(i=i+"<option>"+j+"</option>");f.$element.after(f.options.template),f.$wrapper=f.$element.next("div[data-selectsplitter-wrapper-selector]"),f.$firstSelect=a("select[data-selectsplitter-firstselect-selector]",f.$wrapper),f.$secondSelect=a("select[data-selectsplitter-secondselect-selector]",f.$wrapper);var k=Math.max(g,h,2);k=Math.min(k,10),f.$firstSelect.attr("size",k),f.$secondSelect.attr("size",k),f.$firstSelect.append(i),f.$firstSelect.on("change",a.proxy(f.updateParentCategory,f)),f.$secondSelect.on("change",a.proxy(f.updateChildCategory,f)),f.$selectedOption="",f.currentParentCategory="",f.currentChildCategory="",f.$element.find("option[selected=selected]").length&&(f.$selectedOption=f.$element.find("option[selected=selected]"),f.currentParentCategory=f.$selectedOption.closest("optgroup").attr("label"),f.currentChildCategory=f.$selectedOption.attr("value"),f.$firstSelect.find("option:contains("+f.currentParentCategory+")").attr("selected","selected"),f.$firstSelect.trigger("change"))},b.prototype.updateParentCategory=function(){var a=this;a.currentParentCategory=a.$firstSelect.val(),a.$secondSelect.empty();var b="";for(var c in a.fullCategoryList[a.currentParentCategory])a.fullCategoryList[a.currentParentCategory].hasOwnProperty(c)&&(b=b+'<option value="'+a.fullCategoryList[a.currentParentCategory][c].x+'">'+a.fullCategoryList[a.currentParentCategory][c].y+"</option>");a.$secondSelect.append(b),a.$selectedOption&&a.$secondSelect.find('option[value="'+a.$selectedOption.attr("value")+'"]').attr("selected","selected")},b.prototype.updateChildCategory=function(b){var c=this;c.currentChildCategory=a(b.target).val(),c.$element.find("option[selected=selected]").removeAttr("selected"),c.$element[0].value=c.currentChildCategory,c.$element.find('option[value="'+c.currentChildCategory+'"]').attr("selected","selected"),c.$element.trigger("change"),c.$selectedOption=c.$element.find("option[selected=selected]")},b.prototype.destroy=function(){var a=this;a.$wrapper.remove(),a.$element.removeData(a.type),a.$element.show()},a.fn.selectsplitter=c,a.fn.selectsplitter.Constructor=b}(jQuery);
