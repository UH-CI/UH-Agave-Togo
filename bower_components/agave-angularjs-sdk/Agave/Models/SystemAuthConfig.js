/**
 *AgavePlatformScienceAPILib
 *
 * This file was automatically generated by APIMATIC BETA v2.0 on 10/07/2015
 */

function SystemAuthConfig() {
    this.credential = undefined
    this.internalUsername = undefined
    this.password = undefined
    this.publicKey = undefined
    this.privateKey = undefined
    this.server = undefined
    this.type = undefined
    this.username = undefined
    this.caCerts = undefined

}

//Make instanceof work


/**
 *The credential used to authenticate to the remote system. Depending on the authentication protocol of the remote system, this could be an OAuth Token, X.509 certificate, Kerberose token, or an private key..
 *
 * @return: string
 */
SystemAuthConfig.prototype.getCredential = function () {

    return this.credential;
}


SystemAuthConfig.prototype.setCredential = function (value) {
    this.credential = value;
}


/**
 *The username of the internal user associated with this credential.
 *
 * @return: string
 */
SystemAuthConfig.prototype.getInternalUsername = function () {

    return this.internalUsername;
}


SystemAuthConfig.prototype.setInternalUsername = function (value) {
    this.internalUsername = value;
}


/**
 *The password on the remote system used to authenticate.
 *
 * @return: string
 */
SystemAuthConfig.prototype.getPassword = function () {

    return this.password;
}


SystemAuthConfig.prototype.setPassword = function (value) {
    this.password = value;
}


/**
 *The public ssh key used to authenticate to the remote system.
 *
 * @return: string
 */
SystemAuthConfig.prototype.getPublicKey = function () {

    return this.publicKey;
}


SystemAuthConfig.prototype.setPublicKey = function (value) {
    this.publicKey = value;
}


/**
 *The public ssh key used to authenticate to the remote system..
 *
 * @return: string
 */
SystemAuthConfig.prototype.getPrivateKey = function () {

    return this.privateKey;
}


SystemAuthConfig.prototype.setPrivateKey = function (value) {
    this.privateKey = value;
}


/**
 *The server from which a credential may be obtained.
 *
 * @return: SystemAuthConfigServer
 */
SystemAuthConfig.prototype.getServer = function () {

    return this.server;
}


SystemAuthConfig.prototype.setServer = function (value) {
    this.server = value;
}


/**
 *The authentication type.
 *
 * @return: SystemLoginAuthenticationTypeEnum
 */
SystemAuthConfig.prototype.getType = function () {

    return this.type;
}


SystemAuthConfig.prototype.setType = function (value) {
    this.type = value;
}


/**
 *The local username on the remote system used to authenticate.
 *
 * @return: string
 */
SystemAuthConfig.prototype.getUsername = function () {

    return this.username;
}


SystemAuthConfig.prototype.setUsername = function (value) {
    this.username = value;
}


/**
 *A public URL to the location of the trusted CA certs to use with this credential.
 *
 * @return: string
 */
SystemAuthConfig.prototype.getCaCerts = function () {

    return this.caCerts;
}


SystemAuthConfig.prototype.setCaCerts = function (value) {
    this.caCerts = value;
}
     





